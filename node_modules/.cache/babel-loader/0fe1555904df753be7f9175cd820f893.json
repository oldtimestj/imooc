{"ast":null,"code":"import \"antd/lib/row/style\";\nimport _Row from \"antd/lib/row\";\nimport \"antd/lib/col/style\";\nimport _Col from \"antd/lib/col\";\nvar _jsxFileName = \"/Users/tongjie/Desktop/ReactProject/imooc/src/components/Header/index.js\";\nimport React from 'react';\nimport './index.less';\nimport { formateDate } from '../../utils/utils';\nimport axios from '../../axios';\n\nclass Header extends React.Component {\n  componentWillMount() {\n    this.setState({\n      userName: '河畔一角'\n    });\n    setInterval(() => {\n      let systemTime = formateDate(new Date().getTime());\n      this.setState({\n        systemTime\n      });\n    }, 1000);\n    this.getWeatherAPIData();\n  }\n\n  getWeatherAPIData() {\n    let city = '北京';\n    axios.jsonp({\n      url: 'http://api.map.baidu.com/telematics/v3/weather?location=' + encodeURIComponent(city) + '&output=json&ak=3p49MVra6urFRGOT9s8UBWr2'\n    }).then(res => {\n      console.log('res', res);\n\n      if (res.status === 'success') {\n        let data = res.results[0].weather_data[0];\n        this.setState({\n          dayPicture: data.dayPictureUrl,\n          weather: data.weather\n        });\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(_Row, {\n      className: \"header-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 24,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"\\u6B22\\u8FCE\\uFF0C\", this.state.userName), React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"\\u9000\\u51FA\"))), React.createElement(_Row, {\n      className: \"breadcrumb\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(_Col, {\n      span: 4,\n      className: \"breadcrumb-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"\\u9996\\u9875\"), React.createElement(_Col, {\n      span: 20,\n      className: \"weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, this.state.systemTime), React.createElement(\"span\", {\n      className: \"weather-img\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.dayPicture,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      className: \"weather-detail\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, this.state.weather))));\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/Users/tongjie/Desktop/ReactProject/imooc/src/components/Header/index.js"],"names":["React","formateDate","axios","Header","Component","componentWillMount","setState","userName","setInterval","systemTime","Date","getTime","getWeatherAPIData","city","jsonp","url","encodeURIComponent","then","res","console","log","status","data","results","weather_data","dayPicture","dayPictureUrl","weather","render","state"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,cAAP;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAEA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACnCC,EAAAA,kBAAkB,GAAG;AACnB,SAAKC,QAAL,CAAc;AACZC,MAAAA,QAAQ,EAAC;AADG,KAAd;AAGAC,IAAAA,WAAW,CAAC,MAAM;AAChB,UAAIC,UAAU,GAAGR,WAAW,CAAC,IAAIS,IAAJ,GAAWC,OAAX,EAAD,CAA5B;AACA,WAAKL,QAAL,CAAc;AACZG,QAAAA;AADY,OAAd;AAGD,KALU,EAKR,IALQ,CAAX;AAMA,SAAKG,iBAAL;AACD;;AACDA,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,IAAI,GAAG,IAAX;AACAX,IAAAA,KAAK,CAACY,KAAN,CAAY;AACVC,MAAAA,GAAG,EAAC,6DAA4DC,kBAAkB,CAACH,IAAD,CAA9E,GAAsF;AADhF,KAAZ,EAGGI,IAHH,CAGSC,GAAD,IAAS;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;;AACA,UAAGA,GAAG,CAACG,MAAJ,KAAe,SAAlB,EAA4B;AAC1B,YAAIC,IAAI,GAAGJ,GAAG,CAACK,OAAJ,CAAY,CAAZ,EAAeC,YAAf,CAA4B,CAA5B,CAAX;AACA,aAAKlB,QAAL,CAAc;AACZmB,UAAAA,UAAU,EAACH,IAAI,CAACI,aADJ;AAEZC,UAAAA,OAAO,EAACL,IAAI,CAACK;AAFD,SAAd;AAID;AACF,KAZD;AAaD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAU,KAAKC,KAAL,CAAWtB,QAArB,CADF,EAEE;AAAG,MAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF,CADF,CADF,EAOE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,IAAI,EAAE,CAAX;AAAc,MAAA,SAAS,EAAC,kBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAIE;AAAK,MAAA,IAAI,EAAE,EAAX;AAAe,MAAA,SAAS,EAAC,SAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAwB,KAAKsB,KAAL,CAAWpB,UAAnC,CADF,EAEE;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAE,KAAKoB,KAAL,CAAWJ,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EAKE;AAAM,MAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKI,KAAL,CAAWF,OADd,CALF,CAJF,CAPF,CADF;AAwBD;;AAvDkC;;AA0DrC,eAAexB,MAAf","sourcesContent":["import React from 'react'\nimport { Row, Col } from 'antd'\nimport './index.less'\nimport { formateDate } from '../../utils/utils'\nimport axios from '../../axios'\n\nclass Header extends React.Component {\n  componentWillMount() {\n    this.setState({\n      userName:'河畔一角'\n    })\n    setInterval(() => {\n      let systemTime = formateDate(new Date().getTime())\n      this.setState({\n        systemTime\n      })\n    }, 1000)\n    this.getWeatherAPIData()\n  }\n  getWeatherAPIData() {\n    let city = '北京'\n    axios.jsonp({\n      url:'http://api.map.baidu.com/telematics/v3/weather?location='+ encodeURIComponent(city) +'&output=json&ak=3p49MVra6urFRGOT9s8UBWr2',\n\n    }).then((res) => {\n      console.log('res', res)\n      if(res.status === 'success'){\n        let data = res.results[0].weather_data[0]\n        this.setState({\n          dayPicture:data.dayPictureUrl,\n          weather:data.weather\n        })\n      }\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"header\">\n        <Row className=\"header-top\">\n          <Col span={24}>\n            <span>欢迎，{this.state.userName}</span>\n            <a href=\"#\">退出</a>\n          </Col>\n        </Row>\n        <Row className=\"breadcrumb\" >\n          <Col span={4} className=\"breadcrumb-title\">\n            首页\n          </Col>\n          <Col span={20} className=\"weather\">\n            <span className=\"date\">{this.state.systemTime}</span>\n            <span className=\"weather-img\">\n              <img src={this.state.dayPicture}/>\n            </span>\n            <span className=\"weather-detail\">\n              {this.state.weather}\n            </span>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default Header\n\n\n"]},"metadata":{},"sourceType":"module"}